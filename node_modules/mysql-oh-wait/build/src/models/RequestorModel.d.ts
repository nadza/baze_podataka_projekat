import RequestorCapability, { InjectRequestorInterface } from './RequestorCapability';
import { ReqQueryOptions } from '../MysqlReq';
export interface EventsInterface {
    emit: (eventName: string, data: any) => void;
}
export interface InjectRequestorEventsInterface extends InjectRequestorInterface {
    events?: EventsInterface;
}
export default class RequestorModel extends RequestorCapability {
    static inject({ events, requestor }: InjectRequestorEventsInterface): void;
    static setEvents(events: EventsInterface): void;
    static getEvents(): EventsInterface;
    static query<RawReturnType, InferredTransformedType = RawReturnType>(params: ReqQueryOptions<RawReturnType, InferredTransformedType>): Promise<import("..").ActionResult<InferredTransformedType>>;
}
//# sourceMappingURL=RequestorModel.d.ts.map